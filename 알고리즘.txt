2075 - 우선순위 큐
- 우선순위 큐에서 작은 수부터 나오게 할려면 음수를 넣고 나중에 출력할때 -를 넣으면됨.

*빠른 입출력
//	ios_base::sync_with_stdio(false);
//	cin.tie(NULL);
//	cout.tie(NULL);

3040 - 조합
-next_permutation은 오름차순으로 정렬된 거에 쓰고 prev_permatuation은 내림차순으로 정렬된겅 
	쓰인다.
-조합을 쓰기 위해서는 n개의 값을 가진 벡터와 n개의 값을 가진 임시벡터가 필요한데
n개의 값을 가진 벡터를 r개를 1, 나머지값을 0으로 초기화를 시켜서
임시벡터를 stl로 순열을 돌리고 1일때 그때의 우리가 필요한 벡터를 사용한다.
ex)
do {	for (int i = 0; i < 9; i++)
		{
			if (temp[i] == 1)
			{
				//TODO
			}				
		}		
	} while (prev_permutation(temp.begin(), temp.end()));
do while문을 주로 이용한다.

10448 - 중복된 3개 고르기
-나는 main에서 다 만들었는데 그때 삼중 중첩반복문을 나올때 bool 값을 만들어서
하나하나 break를 때려주면서 했는데
아예 반복문을 하나의 함수로 만들고 제일 안에서 그냥 return true; 제일 밖에서 return false로
간단하게 나오는 방식이 있다. 이 방식이 좀 더 편한거 같다.

-vector<int> temp(n,r) 이렇게 선언하는게
vector의 size를 n으로 하고 모든vector요소를 r로 초기화하는 선언방식이다.

1931번 - 그리디
반례들을 찾아보면서 최적의 상황을 찾아낸다.
sort함수를 이용할때 직접cmp함수를 만들어서 사용하면된다.
두개를 이용할떄 pair함수나 struct를 직접 만들어서 사용하면 된다. 

1449 - 그리디
그냥 앞에서부터 하나하나 하면 된다고 생각해서 품 -- 그리디
나는 터진곳을 1로 두고 막으면 0으로 하나하나 바꿔줫는데
이 함수를 bool로 선언해서 false를 true로 바꿔주는 방식이 좀 더 직관적인거 같다











